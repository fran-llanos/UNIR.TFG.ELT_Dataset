'------------------------------------------------------------------------------
' <auto-generated>
'     Este código fue generado por una herramienta.
'     Versión de runtime:4.0.30319.42000
'
'     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
'     se vuelve a generar el código.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Data
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'Microsoft.VSDesigner generó automáticamente este código fuente, versión=4.0.30319.42000.
'
Namespace wsSAS
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="UtilidadesSASSoap", [Namespace]:="http://tempuri.org/")>  _
    Partial Public Class UtilidadesSAS
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private dsAccesoSASOperationCompleted As System.Threading.SendOrPostCallback
        
        Private dsCrearInstanciaSASOperationCompleted As System.Threading.SendOrPostCallback
        
        Private dsEjecutarSASOperationCompleted As System.Threading.SendOrPostCallback
        
        Private dsCerrarInstanciaSASOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.UNIR.TFG.ELT_Dataset.V40.Ng.My.MySettings.Default.UNIR_TFG_ELT_Dataset_V40_Ng_wsSAS_UtilidadesSAS
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event dsAccesoSASCompleted As dsAccesoSASCompletedEventHandler
        
        '''<remarks/>
        Public Event dsCrearInstanciaSASCompleted As dsCrearInstanciaSASCompletedEventHandler
        
        '''<remarks/>
        Public Event dsEjecutarSASCompleted As dsEjecutarSASCompletedEventHandler
        
        '''<remarks/>
        Public Event dsCerrarInstanciaSASCompleted As dsCerrarInstanciaSASCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/dsAccesoSAS", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function dsAccesoSAS(ByVal Nemonico As String, ByVal Programa As String, ByVal Parametros As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("dsAccesoSAS", New Object() {Nemonico, Programa, Parametros})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub dsAccesoSASAsync(ByVal Nemonico As String, ByVal Programa As String, ByVal Parametros As String)
            Me.dsAccesoSASAsync(Nemonico, Programa, Parametros, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub dsAccesoSASAsync(ByVal Nemonico As String, ByVal Programa As String, ByVal Parametros As String, ByVal userState As Object)
            If (Me.dsAccesoSASOperationCompleted Is Nothing) Then
                Me.dsAccesoSASOperationCompleted = AddressOf Me.OndsAccesoSASOperationCompleted
            End If
            Me.InvokeAsync("dsAccesoSAS", New Object() {Nemonico, Programa, Parametros}, Me.dsAccesoSASOperationCompleted, userState)
        End Sub
        
        Private Sub OndsAccesoSASOperationCompleted(ByVal arg As Object)
            If (Not (Me.dsAccesoSASCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent dsAccesoSASCompleted(Me, New dsAccesoSASCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/dsCrearInstanciaSAS", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function dsCrearInstanciaSAS(ByVal Nemonico As String, ByRef strUniqueId As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("dsCrearInstanciaSAS", New Object() {Nemonico, strUniqueId})
            strUniqueId = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub dsCrearInstanciaSASAsync(ByVal Nemonico As String, ByVal strUniqueId As String)
            Me.dsCrearInstanciaSASAsync(Nemonico, strUniqueId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub dsCrearInstanciaSASAsync(ByVal Nemonico As String, ByVal strUniqueId As String, ByVal userState As Object)
            If (Me.dsCrearInstanciaSASOperationCompleted Is Nothing) Then
                Me.dsCrearInstanciaSASOperationCompleted = AddressOf Me.OndsCrearInstanciaSASOperationCompleted
            End If
            Me.InvokeAsync("dsCrearInstanciaSAS", New Object() {Nemonico, strUniqueId}, Me.dsCrearInstanciaSASOperationCompleted, userState)
        End Sub
        
        Private Sub OndsCrearInstanciaSASOperationCompleted(ByVal arg As Object)
            If (Not (Me.dsCrearInstanciaSASCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent dsCrearInstanciaSASCompleted(Me, New dsCrearInstanciaSASCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/dsEjecutarSAS", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function dsEjecutarSAS(ByVal strUniqueId As String, ByVal Programa As String, ByVal Parametros As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("dsEjecutarSAS", New Object() {strUniqueId, Programa, Parametros})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub dsEjecutarSASAsync(ByVal strUniqueId As String, ByVal Programa As String, ByVal Parametros As String)
            Me.dsEjecutarSASAsync(strUniqueId, Programa, Parametros, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub dsEjecutarSASAsync(ByVal strUniqueId As String, ByVal Programa As String, ByVal Parametros As String, ByVal userState As Object)
            If (Me.dsEjecutarSASOperationCompleted Is Nothing) Then
                Me.dsEjecutarSASOperationCompleted = AddressOf Me.OndsEjecutarSASOperationCompleted
            End If
            Me.InvokeAsync("dsEjecutarSAS", New Object() {strUniqueId, Programa, Parametros}, Me.dsEjecutarSASOperationCompleted, userState)
        End Sub
        
        Private Sub OndsEjecutarSASOperationCompleted(ByVal arg As Object)
            If (Not (Me.dsEjecutarSASCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent dsEjecutarSASCompleted(Me, New dsEjecutarSASCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/dsCerrarInstanciaSAS", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function dsCerrarInstanciaSAS(ByVal strUniqueId As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("dsCerrarInstanciaSAS", New Object() {strUniqueId})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub dsCerrarInstanciaSASAsync(ByVal strUniqueId As String)
            Me.dsCerrarInstanciaSASAsync(strUniqueId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub dsCerrarInstanciaSASAsync(ByVal strUniqueId As String, ByVal userState As Object)
            If (Me.dsCerrarInstanciaSASOperationCompleted Is Nothing) Then
                Me.dsCerrarInstanciaSASOperationCompleted = AddressOf Me.OndsCerrarInstanciaSASOperationCompleted
            End If
            Me.InvokeAsync("dsCerrarInstanciaSAS", New Object() {strUniqueId}, Me.dsCerrarInstanciaSASOperationCompleted, userState)
        End Sub
        
        Private Sub OndsCerrarInstanciaSASOperationCompleted(ByVal arg As Object)
            If (Not (Me.dsCerrarInstanciaSASCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent dsCerrarInstanciaSASCompleted(Me, New dsCerrarInstanciaSASCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub dsAccesoSASCompletedEventHandler(ByVal sender As Object, ByVal e As dsAccesoSASCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class dsAccesoSASCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub dsCrearInstanciaSASCompletedEventHandler(ByVal sender As Object, ByVal e As dsCrearInstanciaSASCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class dsCrearInstanciaSASCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property strUniqueId() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub dsEjecutarSASCompletedEventHandler(ByVal sender As Object, ByVal e As dsEjecutarSASCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class dsEjecutarSASCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub dsCerrarInstanciaSASCompletedEventHandler(ByVal sender As Object, ByVal e As dsCerrarInstanciaSASCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class dsCerrarInstanciaSASCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
End Namespace
